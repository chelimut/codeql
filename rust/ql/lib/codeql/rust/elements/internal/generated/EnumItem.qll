// generated by codegen, do not edit
/**
 * This module provides the generated definition of `EnumItem`.
 * INTERNAL: Do not import directly.
 */

private import codeql.rust.elements.internal.generated.Synth
private import codeql.rust.elements.internal.generated.Raw
import codeql.rust.elements.EnumVariant
import codeql.rust.elements.internal.TypeItemImpl::Impl as TypeItemImpl

/**
 * INTERNAL: This module contains the fully generated definition of `EnumItem` and should not
 * be referenced directly.
 */
module Generated {
  /**
   * INTERNAL: Do not reference the `Generated::EnumItem` class directly.
   * Use the subclass `EnumItem`, where the following predicates are available.
   */
  class EnumItem extends Synth::TEnumItem, TypeItemImpl::TypeItem {
    override string getAPrimaryQlClass() { result = "EnumItem" }

    /**
     * Gets the name of this enum item.
     */
    string getName() { result = Synth::convertEnumItemToRaw(this).(Raw::EnumItem).getName() }

    /**
     * Gets the `index`th variant of this enum item (0-based).
     */
    EnumVariant getVariant(int index) {
      result =
        Synth::convertEnumVariantFromRaw(Synth::convertEnumItemToRaw(this)
              .(Raw::EnumItem)
              .getVariant(index))
    }

    /**
     * Gets any of the variants of this enum item.
     */
    final EnumVariant getAVariant() { result = this.getVariant(_) }

    /**
     * Gets the number of variants of this enum item.
     */
    final int getNumberOfVariants() { result = count(int i | exists(this.getVariant(i))) }
  }
}
